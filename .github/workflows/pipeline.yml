name: ‚öôÔ∏è Automated Football Model Pipeline

on:
  workflow_dispatch:
  schedule:
    - cron: "0 3 * * 1"

jobs:
  run-pipeline:
    runs-on: ubuntu-latest
    steps:
      - name: üßæ Checkout repository
        uses: actions/checkout@v4

      - name: üêç Setup Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: üì¶ Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: üîë Setup API credentials
        run: |
          mkdir -p config
          echo "{\"api_football_key\": \"\${{ secrets.FOOTBALL_API_KEY }}\"}" > config/credentials.json
          echo "‚úÖ API key exported and credentials.json created"

      - name: üöÄ Run full ML pipeline
        run: |
          echo "üöÄ Starting automated Football ML pipeline..."
          mkdir -p data/raw data/processed logs reports

          echo "üì• Running data ingestion..."
          python3 scripts/01_data_ingestion_global.py || echo "‚ö†Ô∏è Data ingestion warning."

          echo "‚öôÔ∏è Running feature engineering..."
          python3 scripts/02_feature_engineering.py || echo "‚ö†Ô∏è Feature engineering warning."
          python3 scripts/05_add_targets.py || echo "‚ö†Ô∏è Target addition warning."

          echo "üîç Searching for features_with_targets dataset..."
          latest_file=$(ls -t data/processed/features_with_targets_*.csv 2>/dev/null | head -n 1)
          if [ -z "$latest_file" ]; then
            echo "‚ùå No features_with_targets dataset found. Skipping model training."
            exit 1
          fi
          cp "$latest_file" data/processed/features_with_targets_latest.csv
          echo "‚úÖ Using $latest_file for modeling."

          echo "üìä Running model training..."
          python3 scripts/03_modeling.py || echo "‚ö†Ô∏è Modeling failed."

          echo "üîÅ Cross-validation..."
          python3 scripts/07_cross_validation.py || echo "‚ö†Ô∏è Cross-validation warning."

          echo "üìà Evaluating models..."
          [ -f logs/model_training_log.csv ] || echo "timestamp,model,metric,value" > logs/model_training_log.csv
[ -f logs/model_training_log.csv ] || echo "timestamp,model,metric,value" > logs/model_training_log.csv
          python3 scripts/06_evaluate_models.py || echo "‚ö†Ô∏è Evaluation issue."

          echo "‚úÖ Pipeline completed successfully!"
