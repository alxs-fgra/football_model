name: ‚öΩ Football ML Pipeline

on:
  push:
    branches: [ main ]
  workflow_dispatch:
  schedule:
    - cron: "0 12 * * 1"  # Lunes 06:00 AM hora CDMX (12:00 UTC)

jobs:
  run-football-pipeline:
    runs-on: ubuntu-latest
    steps:
      - name: üß© Checkout repository
        uses: actions/checkout@v4

      - name: üêç Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: üì¶ Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: üîë Export API key & credentials
        run: |
          echo "FOOTBALL_API_KEY=${{ secrets.FOOTBALL_API_KEY }}" >> $GITHUB_ENV
          mkdir -p config
          echo "{\"api_key\": \"${{ secrets.FOOTBALL_API_KEY }}\"}" > config/credentials.json
          echo "‚úÖ API key exported and credentials.json created"

      - name: üöÄ Run pipeline (ingest -> features -> targets)
        run: |
          mkdir -p data/raw data/processed logs reports
          echo "üì• Running data ingestion..."
          python3 scripts/01_data_ingestion_global.py || echo "‚ö†Ô∏è Data ingestion skipped or partially failed."
          echo "‚öôÔ∏è Running feature engineering..."
          python3 scripts/02_feature_engineering.py || echo "‚ö†Ô∏è Feature engineering issue."
          echo "üéØ Adding targets..."
          python3 scripts/05_add_targets.py || echo "‚ö†Ô∏è Target generation issue."

      - name: üîç Debug Data
        run: |
          echo "Archivos en data/processed:"
          ls -la data/processed/ | head -10
          echo "üß† Detectando el archivo m√°s reciente..."
          LATEST=$(ls -t data/processed/features_with_targets_*.csv 2>/dev/null | head -1)
          if [ -z "$LATEST" ]; then
            echo "‚ùå No se encontr√≥ ning√∫n archivo features_with_targets_*.csv"
            exit 1
          fi
          echo "Archivo detectado: $LATEST"
          export LATEST="$LATEST"  # ‚úÖ exportar la variable para python y siguientes pasos
          echo "LATEST=$LATEST" >> $GITHUB_ENV
          echo "Columnas:"
          python -c "import pandas as pd; import os; latest=os.environ['LATEST']; df=pd.read_csv(latest, nrows=0); print(df.columns.tolist())" || echo "‚ö†Ô∏è No se pudo leer columnas."
          echo "Contenido inicial de model_training_log.csv:"
          if [ -f logs/model_training_log.csv ]; then
            head -n 10 logs/model_training_log.csv
          else
            echo "Archivo no encontrado"
          fi

      - name: üìä Train models
        run: |
          echo "Usando dataset m√°s reciente: $LATEST"
          python3 scripts/03_modeling.py || echo "‚ö†Ô∏è Modeling issue."

      - name: üîÅ Cross-validation
        run: |
          python3 scripts/07_cross_validation.py || echo "‚ö†Ô∏è Cross-validation issue."

      - name: üìà Evaluate models
        run: |
          if [ -f logs/model_training_log.csv ]; then
            python3 scripts/06_evaluate_models.py || echo "‚ö†Ô∏è Evaluation issue."
          else
            echo "‚ö†Ô∏è Skipping evaluation: model_training_log.csv not found."
          fi

      - name: ‚úÖ Final message
        run: echo "‚úÖ Pipeline completed successfully!"
